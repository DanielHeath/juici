#!/usr/bin/env ruby
require 'net/http'
require 'json'
require 'juici/interface'

module Juici
  module CLI extend self
    def main(argv)
      args = Args.new(argv)
      send(args.action, args.opts)
    end

    def build(opts)
      host = URI(opts[:host])
      Net::HTTP.start(host.host, host.port) do |h|
        req = Net::HTTP::Post.new(Juici::Routes::NEW_BUILD)
        req.body = _create_payload(opts)
        h.request req
      end
    end

    def _create_payload(opts)
      URI.encode_www_form({
        "project" => opts[:project],
        "environment" => (opts[:environment] || {}).to_json,
        "command" => opts[:command],
        "priority" => opts[:priority] || 1,
        "callbacks" => (opts[:callbacks] || []).to_json,
        "title" => opts[:title]
      })
    end
  end

  class Args
    attr_reader :action, :opts
    def initialize(argv)
      @opts = {}
      @action = args.shift.to_sym

      until args.empty?
        case args.shift
        when "--command"
          command = args.shift
          options[:command] = if command == "-"
                                File.read(command)
                              else
                                command
                              end
        when "--host"
          options[:host] = args.shift
        when "--title"
          options[:title] = args.shift
        when "--project"
          options[:project] = args.shift
        when "--priority"
          options[:priority] = args.shift
        end
      end
    end
  end
end

CLI.main(ARGV.dup) if __FILE__==$0
