<div class="row">

<div class="span4">

    <h1 class="block-header builds-header builds-header--success">FAIL! <span class="pull-right table-flipper">（╯°□°）╯︵ ┻━┻</span></h1>
    <ul class="builds">
      <li>
        <a class="failed" href="#">
          project_name_1 <span class="pull-right">>></span><br>
          <strong>FAILED</strong> at 4:03 on 07/12/2012
        </a>
      </li>
      <li>
        <a class="failed" href="#">
          project_name_1 <span class="pull-right">>></span><br>
          <strong>FAILED</strong> at 4:03 on 07/12/2012
        </a>
      </li>
    </ul>

  <hr>

  <h1 class="block-header builds-header builds-header--failure">SUCCEED!<span class="pull-right table-flipper">┬─┬ノ( º _ ºノ)</span></h1>
  <ul class="builds">
    <li>
      <a class="successful" href="#">
        project_name_1 <span class="pull-right">>></span><br>
      </a>
    </li>
    <li>
      <a class="successful" href="#">
        project_name_1 <span class="pull-right">>></span><br>
      </a>
    </li>
  </ul>

</div>

<div class="span8">

  <h1 class="block-header">What is juiCI?</h1>
  <p>juiCI is a CI server that has a notion of queuing and priority.</p>
  <p>It's designed to work with agent99 but will play nicely with most frontends to CI.
  <p><a href="#">More about juiCI -></a></p>

  <h1 class="block-header">New</h1>
  <p>From here you can create a new build</p>
  <p>Name is a unique identifier for the project. It doesn't need to already exist, but builds for a like project need to be named identically</p>
  <p>Environment is a json hash of KEY - VALUE pairs, to be passed into the child environment</p>
  <p>Command is where the magic happens. Often they'll be longwinded, but a reasonable boilerplate might look <a href="#">something like this.</a><p>

  <!-- <pre class="prettyprint linenums">
    if [ ! -d .git ]; then
      git init .
      git remote add origin git://github.com/$user/$project.git
    fi

    git fetch origin
    git checkout -fq origin/master

    bundle install --path .bundle
    bundle exec rake spec
  </pre> -->

  <hr>

  <form action="/builds/new" method="post" class="submit-build">

    <div class="row">
      <!-- First Column -->
      <div class="span3">
        <label>Project Name</label>
        <input type="text" name="project" class="span3" value="<%= params[:project] %>" <%= "readonly" if params[:project] %>>
        <label>Environment</label>
        <input type="text" name="environment" class="span3" placeholder="expects a valid json hash" value="">
        <label>Priority</label>
        <input type="text" name="priority" class="span3" value="1">
      </div><!-- End first column -->

      <div class="span5">
        <label>Command</label>
        <textarea name="command" class="span5" rows="4"></textarea>
        <%# TODO -> When callbacks get implemented %>
        <%# <label>Callback URL</label> %>
        <%# <input type="text" name="callback" class="span3"> %>
        <!-- <label><%# HACK %></label> -->
        <button type="submit" class="btn build-submit">** Create **</button>
      </div>

    </div>
  </form>
</div>
</div>
